#include "bgt_compat.nvgt"
#include"form.nvgt"
#include"sound_pool.nvgt"
#include "speech.nvgt"
#include "includes/dlg.nvgt"
#include "includes/form_menu.nvgt"
#include"includes/menu.nvgt"
#include"includes/savefuncks.nvgt"
#include"includes/savedata.nvgt"
#include "includes/virtual_dialogs.nvgt"
int spinBaseTicks = 50;
int spinRandomRange = 50;
int spinBaseDelay = 20;
int spinGrowth = 2;
string version="1.2";
string wheeltype="wheel1";
dictionary lockedWheels;
dictionary wheels;
audio_form form;
instance app("wspin");
menu m;
sound_pool pool;
savedata sd("data/wheels.dat", "rQP8u9I5iWYwcmwPkJ5EzU3ri4r6IQFP77dvgYedgyGQPxzHEi1eKGdBEENLRbYEWBr3hAmmQLgyevhYJJ7Q3sUQt5n6BKjzYVZMWQb2LyYx");
savedata st("data/preffs.dat", "fCZxssmzxaef1nwF3CklVrGJEx96KXTVO3Nl0Y6aOWaGJDCJAFYy7oQmuxbscvh68TCMruG51OUzkJqlj1ks3uIRHHiCL8ySi21R2");
virtual_dialogs vd;
string trim(const string&in str)
{
string result = str;
while (result.length() > 0 && (string_left(result, 1) == " " || string_left(result, 1) == "\n" || string_left(result, 1) == "\r"))
{
result = string_trim_left(result, 1);
}
while (result.length() > 0 && (string_right(result, 1) == " " || string_right(result, 1) == "\n" || string_right(result, 1) == "\r"))
{
result = string_trim_right(result, 1);
}
return result;
}
void setupmenu(bool music_added = true)
{
if (music_added)
{
m.add_music("menumus.ogg");
} else
{
m.add_music("");
}
m.reset();
m.automatic_intro = true;
m.focus_first_item = false;
m.wrap = true;
m.click_sound = "sounds/menuclick.ogg";
m.close_sound = "sounds/menuclose.ogg";
m.edge_sound = "sounds/menuedge.ogg";
m.enter_sound = "sounds/menuenter.ogg";
m.open_sound = "sounds/menuopen.ogg";
m.wrap_sound = "sounds/menuwrap.ogg";
}
void main()
{
show_game_window("WheelSpinner, version "+version);
if (app.is_already_running)
{
alert("Error", "Only one instance can run at a time.");
exit();
}
else
{
readdata();
readpreffs();
wheelspin();
}
}
void wheelspin()
{
form.reset();
form.create_window("Wheel Spinner", false);
int add = form.create_button("&Add Wheel");
int edit = form.create_button("&Edit Wheel");
int spin = form.create_button("&Spin Wheel");
int settings = form.create_button("Spin Se&ttings");
int quit = form.create_button("&Quit");
while (true) {
wait(5);
form.monitor();
if(key_pressed(KEY_ESCAPE))
{
speak("exiting");
wait(500);
exit();
}
if (form.is_pressed(add))
{
add_wheel();
}
if (form.is_pressed(edit))
{
edit_wheel();
}
if (form.is_pressed(spin))
{
spin_wheel();
}
if (form.is_pressed(settings))
{
spinsettings();
}
if (form.is_pressed(quit))
{
speak("exiting");
wait(500);
exit();
}
}
}
