#include "bgt_compat.nvgt"
#include"sound_pool.nvgt"
#include"includes/form.nvgt"
#include "includes/speech.nvgt"
#include "includes/dlg.nvgt"
#include"includes/extrafuncks.nvgt"
#include "includes/form_menu.nvgt"
#include"includes/menu.nvgt"
#include"includes/savefuncks.nvgt"
#include"includes/savedata.nvgt"
#include "includes/virtual_dialogs.nvgt"
array<string> recentWheels;
array<string> resultsHistory;
int spinBaseTicks = 50;
int spinRandomRange = 50;
int spinBaseDelay = 20;
int spinGrowth = 2;
string currentlangfile = "None";
string version="1.5";
string wheeltype="wheel";
dictionary g_lang;
dictionary spinCounts;
dictionary spinOptionCounts;
dictionary lockedWheels;
dictionary wheels;
dictionary wheelDescriptions;
audio_form form;
instance app("wspin");
menu m;
sound_pool pool;
savedata sd("data/saves/spinner.dat", "rQP8u9I5iWYwcmwPkJ5EzU3ri4r6IQFP77dvgYedgyGQPxzHEi1eKGdBEENLRbYEWBr3hAmmQLgyevhYJJ7Q3sUQt5n6BKjzYVZMWQb2LyYx");
savedata st("data/saves/spinsets.dat", "fCZxssmzxaef1nwF3CklVrGJEx96KXTVO3Nl0Y6aOWaGJDCJAFYy7oQmuxbscvh68TCMruG51OUzkJqlj1ks3uIRHHiCL8ySi21R2");
virtual_dialogs vd;
void main()
{
set_sound_storage("data/saves/misc.dat");
set_sound_decryption_key("BRn2x3BJd3O0KrB7kb2L6cY4qJYEjVt5OhuVzJmmsoj9wampZL3IAx7IdIQBMyqW7ssXZhsXwD2nrQR4qRL8038swNq0Zc2ObN6mNlWrjIGcYLqEh2t0OHeM",true);
readdata();
readpreffs();
load_language(currentlangfile);
show_window(trl("WheelSpinner, version") + " " + version);
if (app.is_already_running)
{
alert(trl("Error"), trl("Only one instance of this app can run at a time."));
exit();
}
else
{
pool.play_stationary_extended("applaunch.ogg", false, 0, 0, -5, random(90, 110), false);
wheelspin();
}
}
void wheelspin()
{
form.reset();
form.create_window(trl("Wheel Spinner"), false);
int add = form.create_button(trl("&Add Wheel"));
int edit = form.create_button(trl("&Edit Wheel"));
int manage = form.create_button(trl("&Manage Wheels"));
int stats = form.create_button(trl("&View Wheel Stats"));
    int clearHistory = form.create_button(trl("&Clear Spin History"));
    int resultsBox = form.create_input_box(trl("Spin &History"), join(resultsHistory, "\n"), "", 0, true, true, true);
int spin = form.create_button(trl("&Spin Wheel"));
int settings = form.create_button(trl("Spin Se&ttings"));
int quit = form.create_button(trl("&Quit"));
while (true)
{
wait(5);
form.monitor();
if(alt_is_down() and key_pressed(KEY_F4) or key_repeating(KEY_ESCAPE))
{
    setupmenu(false);
    m.add_item(trl("Yes"), "yes");
    m.add_item(trl("No"), "no");
    m.intro_text =trl("Are you sure you want to exit?");
    int res = m.run();
    if(res==-1)
    {
wheelspin();
}
    if (m.get_item_id(m.get_selected_item()) == "yes")
    {
        speak(trl("Exiting"));
        wait(500);
        exit();
    }
    if (m.get_item_id(m.get_selected_item()) == "no")
    {
wheelspin();
    }
}
if (form.is_pressed(add))
{
add_wheel();
}
if (form.is_pressed(edit))
{
edit_wheel();
}
if (form.is_pressed(manage))
{
manage_wheels();
}
if (form.is_pressed(stats))
{
view_stats();
}
if (form.is_pressed(spin))
{
spin_wheel();
}
if (form.is_pressed(settings))
{
spinsettings();
}
        if (form.is_pressed(clearHistory))
{
            setupmenu(false);
            m.add_item(trl("Yes"), "yes");
            m.add_item(trl("No"), "no");
            m.intro_text=trl("Are you sure you want to clear the spin results history?");
            int res = m.run();
            if (res == -1) wheelspin();
            if (m.get_item_id(m.get_selected_item()) == "yes")
{
                resultsHistory.resize(0);
                alert(trl("Cleared"), trl("Spin history cleared."));
writedata();
                wheelspin();
            }
            if (m.get_item_id(m.get_selected_item()) == "no")
{
                wheelspin();
            }
        }
if (form.is_pressed(quit))
{
    setupmenu(false);
    m.add_item(trl("Yes"), "yes");
    m.add_item(trl("No"), "no");
    m.intro_text=trl("Are you sure you want to exit?");
    int res = m.run();
    if(res==-1)
    {
wheelspin();
}
    if (m.get_item_id(m.get_selected_item()) == "yes")
    {
        speak(trl("Exiting"));
        wait(500);
        exit();
    }
    if (m.get_item_id(m.get_selected_item()) == "no")
    {
wheelspin();
    }
}
}
}
